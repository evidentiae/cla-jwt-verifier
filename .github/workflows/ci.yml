on:
  push:
  schedule:
    - cron: '12 8 * * 5'  # at 8:12 (UTC) on Fridays
  workflow_dispatch:

name: CI

jobs:
  build-and-test:
    name: Build and test Rust application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache .cargo/registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Show Rust environment
        run: |
          rustup --version
          rustup show
      - uses: actions-rs/cargo@v1
        name: cargo build
        with:
          command: build
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          command: test

  test-dockerfile:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run hadolint
        # DL3007/DL3018 It's fine to keep using the latest stable image and packages
        run: docker run --rm -i hadolint/hadolint:latest hadolint --ignore DL3007 --ignore DL3018 - < Dockerfile

  build-docker-images:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - build-and-test
      - test-dockerfile
    env:
      TEMP_IMAGE: cla-jwt-verifier
      DOCKER_HUB_IMAGE: ymyzk/cla-jwt-verifier:latest
      GHCR_IMAGE: ghcr.io/ymyzk/cla-jwt-verifier:latest
    steps:
      - uses: actions/checkout@v2
      - run: docker version
      - run: docker build -t $TEMP_IMAGE .
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Push to Docker Hub
        run: |
          docker tag $TEMP_IMAGE $DOCKER_HUB_IMAGE
          docker push $DOCKER_HUB_IMAGE
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Push to GitHub Container Registry
        run: |
          docker tag $TEMP_IMAGE $GHCR_IMAGE
          docker push $GHCR_IMAGE
